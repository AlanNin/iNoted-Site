---
import { Image } from "astro:assets";
import DemoPlaceholder from "~/assets/demo-placeholder.png";
---

<section
  class="my-10 md:my-20 flex flex-col items-center justify-center h-full gap-4 md:gap-6 px-4"
>
  <span class="px-4 py-2 bg-primary/10 text-primary rounded-full text-sm">
    Your Personal Note-Taking Assistant
  </span>
  <h1
    class="text-4xl sm:text-5xl md:text-6xl font-semibold text-slate-700 text-center max-w-4xl"
  >
    Quick & Intuitive Note-Taking
  </h1>
  <p
    class="max-w-3xl text-center text-slate-600 leading-relaxed text-base md:text-lg"
  >
    Transform your note-taking experience! Enjoy secure, effortless organization
    with customizable notebooks. Elevate your productivity and keep your ideas
    safe.
  </p>
  <div class="flex gap-4 mt-4">
    <a
      href="#features"
      class="border border-slate-500 hover:border-primary hover:text-primary px-8 py-3 rounded-full font-medium transition-all"
    >
      Learn More
    </a>
  </div>
  <div
    class="mt-8 relative w-full max-w-4xl overflow-hidden rounded-xl lg:rounded-2xl shadow-2xl cursor-pointer"
    id="showcase"
  >
    <Image
      src={DemoPlaceholder}
      alt="Demo Placeholder"
      class="w-full aspect-video object-cover transition-opacity duration-300"
      id="placeholder"
      loading="lazy"
    />

    <div
      class="absolute inset-0 flex items-center justify-center bg-black/30 transition-opacity duration-300"
      id="playButton"
    >
      <svg class="w-20 h-20 text-white" fill="currentColor" viewBox="0 0 24 24">
        <path d="M8 5v14l11-7z"></path>
      </svg>
    </div>

    <div id="videoContainer" class="hidden">
      <iframe
        src=""
        data-src="https://utfs.io/f/91p3KrFe7TXK7mC7orQ0vMCh6cLATpPdfulibqoREYmwe3BZ"
        title="iNoted Demo Video"
        allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; autoplay"
        allowfullscreen
        class="w-full aspect-video bg-black"
        id="videoIframe"></iframe>
    </div>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const container = document.getElementById("showcase");
    const placeholder = document.getElementById("placeholder");
    const playButton = document.getElementById("playButton");
    const videoContainer = document.getElementById("videoContainer");
    const videoIframe = document.getElementById(
      "videoIframe"
    ) as HTMLIFrameElement | null;

    if (
      container &&
      placeholder &&
      playButton &&
      videoIframe &&
      videoContainer
    ) {
      container.addEventListener("click", async () => {
        placeholder.classList.add("opacity-0");
        playButton.classList.add("opacity-0");

        const videoUrl = videoIframe.getAttribute("data-src");
        if (videoUrl) {
          const urlWithAutoplay =
            videoUrl +
            (videoUrl.includes("?") ? "&" : "?") +
            "autoplay=1&mute=0";
          videoIframe.setAttribute("src", urlWithAutoplay);
        }

        await new Promise((resolve) => setTimeout(resolve, 300));

        placeholder.remove();
        playButton.remove();
        videoContainer.classList.remove("hidden");

        setTimeout(() => {
          try {
            if (videoIframe.contentWindow) {
              videoIframe.contentWindow.postMessage(
                '{"event":"command","func":"playVideo","args":""}',
                "*"
              );
            }
          } catch (e) {
            console.log("Auto-play attempt failed:", e);
          }
        }, 100);
      });
    }
  });
</script>
